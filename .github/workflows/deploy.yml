name: Deploy to Production

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            set -e

            cd ~/web/portal.glab.si/public_html

            echo "📥 Pulling latest changes..."
            git pull origin main

            echo "🔧 Making deploy script executable..."
            chmod +x deploy.sh

            echo "📋 Ensuring .env file exists..."
            if [ ! -f .env ]; then
                echo "⚠️  .env file not found, running setup..."
                chmod +x setup-env.sh
                ./setup-env.sh
            fi

            echo "🏗️ Running deployment..."
            ./deploy.sh

            echo "✅ Deployment completed successfully!"

      - name: Verify deployment
        uses: appleboy/ssh-action@v1.0.3
        if: success()
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd ~/web/portal.glab.si/public_html

            # Detect docker compose command
            if command -v docker-compose &> /dev/null; then
                DOCKER_COMPOSE="docker-compose"
            elif docker compose version &> /dev/null; then
                DOCKER_COMPOSE="docker compose"
            else
                echo "❌ Error: Neither docker-compose nor docker compose found"
                exit 1
            fi

            echo "🔍 Checking if containers are running..."
            $DOCKER_COMPOSE -f docker-compose.prod.yml ps

            echo "🌐 Checking application health..."
            sleep 10
            curl -f -s -o /dev/null -w "%{http_code}" https://portal.glab.si || echo "Application not responding"

            echo "📊 Container status:"
            $DOCKER_COMPOSE -f docker-compose.prod.yml ps --format "table {{.Name}}\t{{.Status}}\t{{.Ports}}"
